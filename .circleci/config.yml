# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
          docker_layer_caching: true
          
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      
      - run:
          name: Build docker
          command: |
            cd clair-scanner
            docker build -t mridhulimpress:latest .       
      - run:
          name: run tests
          command: |
            docker run -v /var/run/docker.sock:/var/run/docker.sock -d --name clair-scanner mridhulimpress:latest tail -f /dev/null 
            docker exec -it clair-scanner clair-scanner -h
      - run:
          name: push
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
              docker tag app "hub.docker.com/clairscanner:latest"
              docker push "hub.docker.com/clairscanner:latest"
            fi
      - store_artifacts:
          path: test-reports
          destination: test-reports
